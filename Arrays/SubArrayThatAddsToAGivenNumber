using System;

/*3.	Given an unsorted array of nonnegative integers,
 * find a continous subarray which adds to a given number.

Examples :
Input: arr[] = { 1, 4, 20, 3, 10, 5}, sum = 33
Ouptut: Sum found between indexes 2 and 4
 
Input: arr[] = {1, 4, 0, 0, 3, 10, 5}, sum = 7
Ouptut: Sum found between indexes 1 and 4
 
Input: arr[] = {1, 4}, sum = 0
Output: No subarray found */

namespace Ass4_3
{
    class Program
    {
        static int subarray(int[] arr, int sum)
        {
            int currsum = 0;
            for (int i = 0; i < arr.Length; i++)
            {
                currsum = arr[i];
                for (int j = i + 1; j <= arr.Length; j++)
                {
                    if (currsum == sum)
                    {
                        Console.WriteLine("The sum is found between indices{0} and {1}", i, (j - 1));
                        Console.ReadLine();
                        return 1;
                    
                    }

                    if (currsum > sum || j == arr.Length)
                    {
                       // Console.WriteLine("No Sum found in the subarray");
                     
                        break;
                    }
                    currsum = currsum + arr[j];
                }
             
            }
          Console.WriteLine("No SUm found in the subarray");
           return 0;
        }
        public static void Main(string[] args)
        {
            int[] arr1 = { 1, 4, 20, 3, 10, 5 };
            int[] arr2 = { 10, 2, -2, -20, 10 };
            int[] arr3 = { 1, 4 };
            int sum = 33, sum2 =-10,sum3 =0;
            subarray(arr1, sum);
            subarray(arr2, sum2);
            subarray(arr3, sum3);
            Console.ReadLine();
        }
        
    }
}
